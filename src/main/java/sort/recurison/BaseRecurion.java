package sort.recurison;


/**
 * 1.递归：递归调用画图非常重要
 * 2.实际理解：递归底层是利用系统栈来实现
 * 3.任何递归函数都一定可以改成非递归，不用系统帮你压栈（系统栈空间），自己压栈（内存空间）
 * 4.递归改成非递归的必要性：
 *   a.工程上一定要改，除非确定数据量再大递归也一定不深,比如 归并排序、快速排序、线段树等
 *   b.算法笔试或者比赛中（能通过就不改）
 * 5.master公式
 *  a.所有子问题规模相同的递归才能用master公式：T(n) = a*T(n/b) + O(n^c) a,b,c都是常数
 *  b.如果log(b,a)<c,复杂度为O(n^c)
 *  c.如果log(b,a)>c,复杂度为O(n^log(b,a))
 *  d.如果log(b,a)==c,复杂度为O(n^c*log(n))
 */

public class BaseRecurion {
}
